@model DataAccess.City

@{
    ViewBag.Title = "Index";
}

<div class="container body-content">
    <table class="resourcesTable">
        <tr>
            @foreach (var res in this.Model.Resources)
            {
                <td class="res-img @(res.Type)"><img src="~/Content/img/icon-@(res.Type).png" /></td>
                <td class="res-value @(res.Type)">@res.Value.ToString("F4")</td>
                <td class="res-lastUpdate @(res.Type) hidden">@res.LastUpdate</td>
            }
        </tr>
    </table>
    <div class="main">
        <img id="villageImage" src="Content/img/village-bg.jpg" />
        <a href='@Url.Action("Index", "Buildings", new { cityId = Model.CityId })'>
            <img id="cityBuildingsImage" src='@Url.Content("~/Content/img/city_buildings.jpg")' />
        </a>
        <div class="mine-wrapper">
            @foreach (var mine in Model.Mines)
            {
                        @*<a href="@Url.Action("Details", "Mines", new { mineId = mine.MineId })"*@

                            <div class="@(mine.Type) mine-level mine-@(mine.Type.ToString().ToLower()) @mine.MineStyle mine-details-btn" data-mine-id="@mine.MineId" style="text-align: center; vertical-align: middle; font-weight: bold;">
                                <div class="hourProduction hidden">@mine.GetProductionPerHour()</div>
                                <div class="upgradeCompletion hidden">
                                    @(mine.UpgradeCompletion.ToUniversalTime().Subtract(new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc)).TotalMilliseconds)
                                </div>
                                <div>@mine.Level</div>
                            </div>
                            <div >
                                @{ 
                                    if (mine.UpgradeCompletion - DateTime.Now > DateTime.Now - DateTime.Now) { 
                                        <div class="time-detail @mine.MineStyle-timebox" style="font-size:x-small" data-upgrade-completion="@(mine.UpgradeCompletion.ToUniversalTime().Subtract(new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc)).TotalMilliseconds)"></div>
                                    }
                                 }
                            </div>
                        @*@<!--a--@((mine.UpgradeCompletion - DateTime.Now).ToString().Substring(0,8))-->*@
            }
        </div>
    </div>
    <div id="mine-details-container" class="hidden">
        <div class="close-btn">X</div>
        <div class="content"></div>
    </div>
    @{
        int barnMax = 0;
        int granaryMax = 0;
        foreach (var building in Model.Buildings)
        {
            if (building.BuildingType!= null && building.BuildingType.Name == "Barn")
            {
                barnMax += 100 + 100 * building.Level;
            }
            else if (building.BuildingType != null && building.BuildingType.Name == "Garnary")
            {
                granaryMax += 100 + 100 * building.Level;
            }
        }
    }
    <div class="barnMax hidden">@barnMax</div>
    <div class="granaryMax hidden">@granaryMax</div>
</div>

@section Scripts {
    <script src="~/Scripts/javascript/JavaScript.js"></script>
    <script src="~/Scripts/Date.min.js"></script>
}